<template>
  <view class="plan-analysis-page">
    <!-- BMI卡片 -->
    <view class="bmi-bar" @click="showBmiEdit = true">
      <view class="bmi-item">
        <view class="bmi-label">当前BMI</view>
        <view class="bmi-value">{{ currentBMIShow }}</view>
      </view>
      <view class="bmi-divider"></view>
      <view class="bmi-item right">
        <view class="bmi-label">目标BMI</view>
        <view class="bmi-value target">{{ targetBMIShow }}</view>
      </view>
      <view class="bmi-edit-tip">点击修改</view>
    </view>
    
    <!-- BMI编辑弹窗 -->
    <view v-if="showBmiEdit" class="bmi-edit-mask">
      <view class="bmi-edit-panel">
        <view class="bmi-edit-title">修改BMI参数</view>
        <view class="bmi-edit-group">
          <view class="bmi-edit-subtitle">当前体测</view>
          <input class="bmi-edit-input" v-model="editCurrentHeight" type="number" placeholder="身高cm" />
          <input class="bmi-edit-input" v-model="editCurrentWeight" type="number" placeholder="体重kg" />
          <view class="bmi-edit-preview">BMI: <text>{{ currentBmiPreview }}</text></view>
        </view>
        <view class="bmi-edit-group">
          <view class="bmi-edit-subtitle">目标体测</view>
          <input class="bmi-edit-input" v-model="editTargetHeight" type="number" placeholder="身高cm" />
          <input class="bmi-edit-input" v-model="editTargetWeight" type="number" placeholder="体重kg" />
          <view class="bmi-edit-preview">BMI: <text>{{ targetBmiPreview }}</text></view>
        </view>
        <view class="bmi-edit-btns">
          <button @click="saveBmi" type="primary">保存</button>
          <button @click="showBmiEdit=false" type="default">取消</button>
        </view>
      </view>
    </view>
    
    <!-- 图表分析区 -->
    <view class="analysis-section">
      <view class="chart-row">
        <!-- 打卡趋势 -->
        <view class="chart-card trend-card">
          <view class="chart-title-row">
            <text class="chart-title">打卡趋势</text>
            <view class="chart-tabs">
              <text v-for="(tab, idx) in trendTabs" :key="tab"
                    :class="{active: trendTabIdx===idx}" @click="switchTrendTab(idx)">{{ tab }}</text>
            </view>
          </view>
          <view class="chart-area small-chart-area">
            <qiun-data-charts
              type="line"
              :opts="trendOpts"
              :chartData="trendChartData"
              canvasId="trendChart"
              ref="trendChart"
              width="160"
              height="110"
            ></qiun-data-charts>
          </view>
        </view>
        <!-- 项目分布饼图 -->
        <view class="chart-card pie-card">
          <view class="chart-title-row">
            <text class="chart-title">运动项目分布</text>
          </view>
          <view class="pie-area">
            <qiun-data-charts
              type="pie"
              :opts="pieOpts"
              :chartData="pieChartData"
              canvasId="pieChart"
              ref="pieChart"
              width="240"
              height="200"
            ></qiun-data-charts>
          </view>
        </view>
      </view>
    </view>
    
    <!-- 目标完成率 -->
    <view class="progress-card">
      <view class="progress-label">本月目标达成率</view>
      <view class="progress-bar-bg">
        <view class="progress-bar-fg" :style="{width: (goalRate*100).toFixed(0)+'%'}"></view>
      </view>
      <view class="progress-value">{{ (goalRate*100).toFixed(1) }}%</view>
    </view>
    
    <!-- 高光成就和习惯分析 -->
    <view class="stat-section">
      <view class="stat-cards">
        <view class="stat-card">
          <view class="stat-num">{{ maxStreak }}</view>
          <view class="stat-label">最长连续打卡</view>
        </view>
        <view class="stat-card">
          <view class="stat-num">{{ bestMonth }}</view>
          <view class="stat-label">最佳月打卡(次)</view>
        </view>
        <view class="stat-card">
          <view class="stat-num">{{ avgWeekTimes }}</view>
          <view class="stat-label">平均每周打卡</view>
        </view>
        <view class="stat-card">
          <view class="stat-num">{{ favoriteProject || '—' }}</view>
          <view class="stat-label">最爱项目</view>
        </view>
      </view>
    </view>
    
    <!-- 个性化建议 -->
    <view class="suggest-section" v-if="suggestion">
      <view class="suggest-header">智能建议</view>
      <view class="suggest-content">{{ suggestion }}</view>
    </view>
    
    <!-- 导出CSV按钮 -->
    <button class="export-btn" @click="exportReport">导出CSV报告</button>
  </view>
</template>

<script>
export default {
  data() {
    return {
      // BMI相关
      currentBMI: 0,
      targetBMI: 0,
      currentHeight: 170,
      currentWeight: 60,
      targetHeight: 170,
      targetWeight: 55,
      showBmiEdit: false,
      editCurrentHeight: '',
      editCurrentWeight: '',
      editTargetHeight: '',
      editTargetWeight: '',
      // 图表tab
      trendTabs: ['近7天', '近30天', '本月', '全年'],
      trendTabIdx: 0,
      trendOpts: {
        color: ["#00bfae"],
        padding: [8, 6, 0, 8],
        enableScroll: false,
        legend: { show: false },
        dataLabel: false,
        xAxis: { disableGrid: false, itemCount: 7, axisLine: false, labelCount: 4 },
        yAxis: { min: 0, gridType: "dash" },
        extra: { line: { type: "curve" } }
      },
      trendChartData: { categories: [], series: [] },
      pieOpts: {
        color: ["#00bfae", "#36cfc9", "#ff9800", "#ffb300", "#ff5b5b"],
        legend: { position: "bottom", float: "center" },
        extra: {
          pie: {
            border: false,
            labelWidth: 20,
            activeOpacity: 0.5,
            activeRadius: 8,
            radius: 80
          }
        }
      },
      pieChartData: { series: [] },
      // 进度与统计
      goalRate: 0,
      maxStreak: 0,
      bestMonth: 0,
      avgWeekTimes: 0,
      favoriteProject: '',
      suggestion: '',
      userId: ''
    };
  },
  computed: {
    currentBMIShow() {
      return this.currentBMI ? this.currentBMI.toFixed(1) : '—'
    },
    targetBMIShow() {
      return this.targetBMI ? this.targetBMI.toFixed(1) : '—'
    },
    currentBmiPreview() {
      const h = Number(this.editCurrentHeight)
      const w = Number(this.editCurrentWeight)
      if (!h || !w) return '—'
      return (w / Math.pow(h / 100, 2)).toFixed(1)
    },
    targetBmiPreview() {
      const h = Number(this.editTargetHeight)
      const w = Number(this.editTargetWeight)
      if (!h || !w) return '—'
      return (w / Math.pow(h / 100, 2)).toFixed(1)
    }
  },
  onShow() {
    const user = uni.getStorageSync('user');
    if (user && user.username) {
      this.userId = user.username;
      this.loadAllAnalysis();
    }
  },
  methods: {
    switchTrendTab(idx) {
      this.trendTabIdx = idx;
      this.loadTrendChart();
    },
    saveBmi() {
      const ch = Number(this.editCurrentHeight)
      const cw = Number(this.editCurrentWeight)
      const th = Number(this.editTargetHeight)
      const tw = Number(this.editTargetWeight)
      if (!ch || !cw || !th || !tw) {
        uni.showToast({ title: '请完整输入身高体重', icon: 'none' })
        return
      }
      // 保存到后端
      uni.request({
        url: 'http://127.0.0.1:5000/api/profile',
        method: 'POST',
        header: { 'Content-Type': 'application/json' },
        data: {
          user_id: this.userId,
          bmi_height: ch,
          bmi_weight: cw,
          targetHeight: th,
          targetWeight: tw
        },
        success: (res) => {
          this.showBmiEdit = false;
          this.loadAllAnalysis();
        }
      });
    },
    // 主方法：拉取后端全部分析数据
    loadAllAnalysis() {
      // 获取BMI
      uni.request({
        url: `http://127.0.0.1:5000/api/profile?user_id=${this.userId}`,
        method: 'GET',
        success: (res) => {
          const data = res.data && res.data.profile ? res.data.profile : {};
          this.currentHeight = data.bmi_height || 170;
          this.currentWeight = data.bmi_weight || 60;
          this.currentBMI = this.currentWeight / Math.pow(this.currentHeight / 100, 2);
          this.targetHeight = data.targetHeight || this.currentHeight;
          this.targetWeight = data.targetWeight || 55;
          this.targetBMI = this.targetWeight / Math.pow(this.targetHeight / 100, 2);
          this.editCurrentHeight = this.currentHeight;
          this.editCurrentWeight = this.currentWeight;
          this.editTargetHeight = this.targetHeight;
          this.editTargetWeight = this.targetWeight;
        }
      });
      // 获取打卡与分析
      uni.request({
        url: `http://127.0.0.1:5000/api/analysis?user_id=${this.userId}&trendTab=${this.trendTabIdx}`,
        method: 'GET',
        success: (res) => {
          const d = res.data || {};
          this.trendChartData = d.trendChartData || { categories: [], series: [] };
          this.pieChartData = d.pieChartData || { series: [] };
          this.goalRate = d.goalRate || 0;
          this.maxStreak = d.maxStreak || 0;
          this.bestMonth = d.bestMonth || 0;
          this.avgWeekTimes = d.avgWeekTimes || 0;
          this.favoriteProject = d.favoriteProject || '';
          this.suggestion = d.suggestion || '';
        }
      });
    },
    // 兼容切换tab时只加载趋势图
    loadTrendChart() {
      uni.request({
        url: `http://127.0.0.1:5000/api/analysis/trend?user_id=${this.userId}&trendTab=${this.trendTabIdx}`,
        method: 'GET',
        success: (res) => {
          this.trendChartData = res.data && res.data.trendChartData ? res.data.trendChartData : { categories: [], series: [] };
        }
      });
    },
    // 导出CSV报告
    exportReport() {
      uni.request({
        url: `http://127.0.0.1:5000/api/export?user_id=${this.userId}`,
        method: 'GET',
        responseType: 'arraybuffer', // 确保响应类型为数组缓冲区
        success: (res) => {
          const blob = new Blob([res.data], { type: 'text/csv' });
          const url = URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.href = url;
          a.download = `${this.userId}_fitness_report.csv`;
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
          URL.revokeObjectURL(url);
        },
        fail: (err) => {
          console.error('导出CSV报告失败', err);
          uni.showToast({ title: '导出失败', icon: 'none' });
        }
      });
    }
  }
}
</script>

<style scoped>
.plan-analysis-page {
  min-height: 100vh;
  background: linear-gradient(135deg, #e0f7fa 0%, #f5f5f5 100%);
  padding-bottom: 20px;
}

.bmi-bar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #fff;
  border-radius: 18px;
  margin: 18px 14px 8px 14px;
  box-shadow: 0 2px 8px rgba(0, 191, 174, 0.09);
  padding: 18px 32px 14px 32px;
  position: relative;
  cursor: pointer;
  transition: box-shadow .18s;
}

.bmi-bar:active {
  box-shadow: 0 4px 24px rgba(0, 191, 174, 0.16);
}

.bmi-label {
  font-size: 15px;
  color: #888;
}

.bmi-value {
  font-size: 27px;
  font-weight: bold;
  color: #00bfae;
  letter-spacing: 1px;
}

.bmi-value.target {
  color: #ff9800;
}

.bmi-divider {
  width: 1px;
  height: 40px;
  background: #e0f7fa;
  margin: 0 18px;
}

.bmi-edit-tip {
  position: absolute;
  bottom: 7px;
  right: 18px;
  font-size: 12px;
  color: #bbb;
  letter-spacing: 1px;
}

.bmi-edit-mask {
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(34, 34, 34, 0.21);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 99;
}

.bmi-edit-panel {
  background: #fff;
  border-radius: 18px;
  padding: 30px 28px 18px 28px;
  min-width: 280px;
  box-shadow: 0 6px 32px rgba(0, 191, 174, 0.12);
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.bmi-edit-title {
  font-size: 18px;
  text-align: center;
  margin-bottom: 16px;
  font-weight: 600;
  letter-spacing: 1px;
  color: #00bfae;
}

.bmi-edit-group {
  margin-bottom: 10px;
}

.bmi-edit-subtitle {
  font-size: 14px;
  color: #888;
  margin-bottom: 3px;
}

.bmi-edit-input {
  border: 1px solid #eee;
  border-radius: 8px;
  height: 38px;
  padding: 0 12px;
  font-size: 15px;
  color: #222;
  margin-bottom: 5px;
}

.bmi-edit-preview {
  font-size: 15px;
  color: #666;
  text-align: left;
  margin-bottom: 2px;
}

.bmi-edit-btns {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  gap: 10px;
  margin-top: 8px;
}

.analysis-section {
  margin-top: 10px;
}

.chart-row {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px;
  margin: 20px 0;
}

.chart-card {
  background: #fff;
  border-radius: 20px;
  box-shadow: 0 4px 20px rgba(0, 191, 174, 0.11);
  padding: 12px 4px 14px 4px;
  flex: 1 1 40%;
  min-width: 320px;
  max-width: 320px;
  margin: 8px;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.trend-card,
.pie-card {
  margin-bottom: 0;
}

.chart-title-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 7px;
}

.chart-title {
  font-size: 19px;
  font-weight: 700;
  color: #00bfae;
}

.chart-tabs {
  display: flex;
  gap: 8px;
}

.chart-tabs text {
  font-size: 14px;
  color: #888;
  padding: 3px 13px;
  border-radius: 12px;
  background: #eef7f7;
  margin-left: 2px;
  transition: background .16s, color .16s;
}

.chart-tabs .active {
  color: #fff;
  background: linear-gradient(90deg, #00bfae 0%, #26c6da 100%);
  font-weight: bold;
}

.chart-area {
  display: flex;
  align-items: center;
  justify-content: center;
}

.small-chart-area {
  min-height: 90px;
  height: 120px;
  max-height: 1200px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.pie-area {
  min-height: 200px;
  height: 200px;
  max-height: 220px;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.progress-card {
  background: #fff;
  border-radius: 18px;
  margin: 18px 16px 18px 16px;
  box-shadow: 0 2px 8px rgba(0, 191, 174, 0.09);
  padding: 18px 12px 12px 12px;
  text-align: center;
}

.progress-label {
  font-size: 15px;
  color: #888;
  margin-bottom: 10px;
}

.progress-bar-bg {
  width: 76vw;
  max-width: 340px;
  height: 14px;
  background: #e0f7fa;
  border-radius: 10px;
  overflow: hidden;
  margin: 0 auto 8px auto;
}

.progress-bar-fg {
  height: 100%;
  background: linear-gradient(90deg, #00BFAE 0%, #26C6DA 100%);
  border-radius: 10px;
  transition: width .3s;
}

.progress-value {
  color: #00BFAE;
  font-size: 16px;
  font-weight: bold;
}

.stat-section {
  margin: 0 14px 0 14px;
}

.stat-cards {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.stat-card {
  flex: 1;
  min-width: 44vw;
  background: linear-gradient(135deg, #e1fafd 0%, #f8fafc 100%);
  border-radius: 16px;
  box-shadow: 0 2px 8px rgba(0, 191, 174, 0.04);
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 17px 0 14px 0;
  margin-bottom: 8px;
}

.stat-num {
  font-size: 21px;
  color: #ff9800;
  font-weight: bold;
  margin-bottom: 5px;
}

.stat-label {
  font-size: 14px;
  color: #666;
  text-align: center;
}

.suggest-section {
  margin: 18px 14px 0 14px;
  background: linear-gradient(90deg, #e0f7fa 0%, #f7fafc 100%);
  border-radius: 15px;
  box-shadow: 0 2px 8px rgba(0, 191, 174, 0.06);
  padding: 17px 16px 13px 16px;
}

.suggest-header {
  color: #00bfae;
  font-size: 16px;
  font-weight: 700;
  margin-bottom: 5px;
}

.suggest-content {
  color: #666;
  font-size: 15px;
  letter-spacing: 1px;
}

.export-btn {
  width: 80vw;
  margin: 48px auto 0 auto;
  background: linear-gradient(90deg, #00bfae 0%, #26c6da 100%);
  color: #fff;
  font-size: 19px;
  border-radius: 23px;
  padding: 15px 0;
  font-weight: bold;
  letter-spacing: 2px;
  box-shadow: 0 2px 10px rgba(0, 191, 174, 0.13);
  display: block;
}
</style>
